version: "3"

networks:
  uas:
    external: true

services:
  db-uas:
    image: mysql:8.0
    container_name: db-uas
    command: --sql_mode=""
    ports:
      - 3307:3306
    volumes:
      - ./initDb:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: 3GkB8VL0lJaKApDP
    networks:
      - uas
    labels:
      - traefik.enable=false
    restart: always
  auth-uas:
    image: auth
    hostname: auth
    container_name: auth-uas
    command: make start
    build:
      context: ../authentication
      dockerfile: Dockerfile
    ports:
      - 40021:40000
      - 40051:5050
    volumes:
      - type: bind
        source: ../authentication
        target: /home/app
      - type: bind
        source: ../authentication/db/migrations
        target: /home/app/migrations
    working_dir: /home/app
    environment:
      JWT_PRIVATE: 6a935e6baca5757a3b77a2fe747a71b9466951e0b555448413547d656042ed9acf63526baaad8e75cf13821ecba4881ca42a4366d8f2e3a08d49fb567ea1da57
      JWT_PUBLIC: cf63526baaad8e75cf13821ecba4881ca42a4366d8f2e3a08d49fb567ea1da57
      JWT_REFRESH: wuVXMq19t7UssgA46yOyPnH8BpVEONcasPen4uV9BRhEHQeckP
      DB_NAME: auth
      DB_USER: auth
      DB_SECRET: 3GkB8VL0lJaKApDP
      DB_HOST: db-uas
    networks:
      - uas
    labels:
      # This is enableing treafik to proxy this service
      - "traefik.enable=true"
      # Here we have to define the URL
      - "traefik.http.routers.auth.rule=Host(`local.thesis.de/auth`)"
      # Here we are defining wich entrypoint should be used by clients to access this service
      - "traefik.http.routers.auth.entrypoints=web"
      # Here we define in wich network treafik can find this service
      - "traefik.docker.network=web"
      # This is the port that traefik should proxy
      - "traefik.http.services.auth.loadbalancer.server.port=5050"
    restart: always
  todo-uas:
    image: todo
    hostname: todo
    container_name: todo-uas
    command: make start
    build:
      context: ../todo
      dockerfile: Dockerfile
    ports:
      - 40022:40000 #debug
      - 40052:5050 #http
    volumes:
      - type: bind
        source: ../todo
        target: /home/app
      - type: bind
        source: ../todo/db/migrations
        target: /home/app/migrations
    working_dir: /home/app
    environment:
      DB_NAME: todo
      DB_USER: todo
      DB_SECRET: 3GkB8VL0lJaKApDP
      DB_HOST: db-uas
    networks:
      - uas
    labels:
      # This is enableing treafik to proxy this service
      - "traefik.enable=true"
      # Here we have to define the URL
      - "traefik.http.routers.todo.rule=Host(`local.thesis.de/todo`)"
      # Here we are defining wich entrypoint should be used by clients to access this service
      - "traefik.http.routers.todo.entrypoints=web"
      # Here we define in wich network treafik can find this service
      - "traefik.docker.network=web"
      # This is the port that traefik should proxy
      - "traefik.http.services.todo.loadbalancer.server.port=5050"
    restart: always
  user-uas:
    image: user
    hostname: user
    container_name: user-uas
    command: make start
    build:
      context: ../user
      dockerfile: Dockerfile
    ports:
      - 40023:40000 #debug
      - 40053:5050 #http
    volumes:
      - type: bind
        source: ../user
        target: /home/app
      - type: bind
        source: ../user/db/migrations
        target: /home/app/migrations
    working_dir: /home/app
    environment:
      DB_NAME: user
      DB_USER: user
      DB_SECRET: 3GkB8VL0lJaKApDP
      DB_HOST: db-uas
    networks:
      - uas
    labels:
      # This is enableing treafik to proxy this service
      - "traefik.enable=true"
      # Here we have to define the URL
      - "traefik.http.routers.user.rule=Host(`local.thesis.de/user`)"
      # Here we are defining wich entrypoint should be used by clients to access this service
      - "traefik.http.routers.user.entrypoints=web"
      # Here we define in wich network treafik can find this service
      - "traefik.docker.network=web"
      # This is the port that traefik should proxy
      - "traefik.http.services.user.loadbalancer.server.port=5050"
    restart: always
  traefik:
    image: traefik:v2.3
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    restart: always
    ports:
      - "80:80"
      - "8080:8080" # The Web UI (enabled by --api)
    networks:
      - uas
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
